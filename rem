#!/usr/bin/env raku
use File::Directory::Tree;

unit sub MAIN(
    #| the regex to match against file names
    Str $regex,
    #| print file names as they are deleted
    Bool :v(:$verbose) = False,
    #| don't actually delete anything, implies --verbose
    Bool :d(:$dry-run) = False,
    #| keep files that match the regex instead of deleting them
    Bool :k(:$keep) = False
);

my $regex-object = rx/<$regex>/;

for dir(".") {
    FIRST {
        my $will-or-would = $dry-run ?? "would" !! "will";
        say "these files $will-or-would be DELETED:" if $verbose || $dry-run;
    }

    my $basename = .basename;
    if $keep {
        next unless $basename !~~ $regex-object;
    } else {
        next unless $basename ~~ $regex-object;
    }

    say "$basename" if $verbose || $dry-run;
    delete($_) unless $dry-run;
}

multi sub delete(IO::Path $path where *.d) { rmtree($path); }

multi sub delete(IO::Path $path where *.f) { $path.unlink; }
